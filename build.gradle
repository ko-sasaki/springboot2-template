plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.github.johnrengelman.processes" version "0.5.0"
    id "org.openapi.generator" version "4.3.1"
    id "org.springdoc.openapi-gradle-plugin" version "1.3.0"
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group = 'net.sasaki'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    jar {
        enabled = true
    }

    bootJar {
        enabled = false
    }

    ext {
        springbootVersion = '2.3.3.RELEASE'
        junitVersion = '5.5.2'
        mybatisDynamicSqlVersion = '1.1.4'
        springMybatisStarterVersion = '2.1.3'
        modelMapperVersion = '2.3.0'
        mybatisFreemarkerVersion = '1.2.2'
        springDocsVersion = '1.4.2'
    }

    dependencyManagement {
        imports {
            mavenBom "org.junit:junit-bom:5.5.2"
            mavenBom "org.springframework.boot:spring-boot-dependencies:2.3.3.RELEASE"
        }
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {

        if (!['core'].contains(project.project.name)) {
            implementation project(":module:core")
        }

        if (['repository','web','api'].contains(project.project.name)){
            // web
            implementation 'org.springframework.boot:spring-boot-starter-web'
            implementation 'org.springframework.boot:spring-boot-starter-webflux'
        }

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        // modelmapper
        implementation "org.modelmapper.extensions:modelmapper-spring:2.3.0"

        // cache
        implementation 'org.springframework.boot:spring-boot-starter-cache'

        // template
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

        // session
        implementation 'org.springframework.session:spring-session-data-redis'

        // database
        implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${springMybatisStarterVersion}"
        implementation "org.mybatis.scripting:mybatis-freemarker:1.2.2"
        runtimeOnly 'mysql:mysql-connector-java'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'


        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'io.projectreactor:reactor-test'
    }

    test {
        useJUnitPlatform()
    }
}



